# -*- coding: utf-8 -*-
"""Untitled16.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qnFu8_rWiJo2N6HAzZhTfDQTtBqbcpPn
"""

from flask import Flask, render_template_string, request, redirect, session
from flask_ngrok import run_with_ngrok
from decimal import Decimal

app = Flask(__name__)
app.secret_key = 'ecommerce_secret_123'
app.config['SESSION_PERMANENT'] = False
run_with_ngrok(app)

# Database
products = {
    1: {"name": "Wireless Earbuds", "price": Decimal('59.99'),
        "image": "https://m.media-amazon.com/images/I/51RBVhgbQqL._AC_UF1000,1000_QL80_.jpg", "stock": 15},
    2: {"name": "Smart Watch", "price": Decimal('129.99'),
        "image": "https://m.media-amazon.com/images/I/71Swqqe7XAL._AC_UF1000,1000_QL80_.jpg", "stock": 8},
    3: {"name": "Bluetooth Speaker", "price": Decimal('39.99'),
        "image": "https://m.media-amazon.com/images/I/61B7hY5aR5L._AC_UF1000,1000_QL80_.jpg", "stock": 12}
}

users = {"admin": "password123", "user1": "mypassword"}

# ======================
# HTML Templates
# ======================
BASE_TEMPLATE = """
<!DOCTYPE html>
<html>
<head>
    <title>MicroTech Shop</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f5f5f5; }
        .header { background: #333; color: white; padding: 15px; margin-bottom: 20px; }
        .product { background: white; border: 1px solid #ddd; border-radius: 5px; padding: 15px; margin: 10px; float: left; width: 220px; }
        .product img { max-width: 100%; height: 150px; object-fit: contain; }
        .nav { float: right; }
        .btn { background: #4CAF50; color: white; padding: 8px 12px; border: none; border-radius: 4px; cursor: pointer; }
        .btn-danger { background: #f44336; }
        table { width: 100%; border-collapse: collapse; margin: 20px 0; }
        th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
        th { background-color: #333; color: white; }
        .checkout-btn { background: #2196F3; padding: 10px 15px; font-size: 16px; }
        .error { color: red; }
        .success { color: green; }
    </style>
</head>
<body>
    <div class="header">
        <h1>MicroTech Shop</h1>
        <div class="nav">
            {% if not session.get('logged_in') %}
                <a href="/login" style="color: white; margin-right: 15px;">Login</a>
                <a href="/register" style="color: white;">Register</a>
            {% else %}
                <span style="color: white; margin-right: 15px;">Welcome, {{ session.get('username') }}</span>
                <a href="/logout" style="color: white; margin-right: 15px;">Logout</a>
                <a href="/cart" style="color: white;">Cart ({{ session.get('cart', {})|length }})</a>
            {% endif %}
        </div>
        <div style="clear: both;"></div>
    </div>
    {% block content %}{% endblock %}
</body>
</html>
"""

HOME_TEMPLATE = """
{% extends "base" %}
{% block content %}
    <h2>Featured Products</h2>
    {% for id, product in products.items() %}
        <div class="product">
            <img src="{{ product.image }}" alt="{{ product.name }}">
            <h3>{{ product.name }}</h3>
            <p>Price: ${{ product.price }}</p>
            <p>In Stock: {{ product.stock }}</p>
            <form action="/add_to_cart" method="post">
                <input type="hidden" name="product_id" value="{{ id }}">
                <input type="number" name="quantity" value="1" min="1" max="{{ product.stock }}">
                <button type="submit" class="btn">Add to Cart</button>
            </form>
        </div>
    {% endfor %}
    <div style="clear: both;"></div>
{% endblock %}
"""

CART_TEMPLATE = """
{% extends "base" %}
{% block content %}
    <h2>Your Shopping Cart</h2>
    <a href="/" class="btn">Continue Shopping</a>
    {% if cart_items %}
        <table>
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Action</th>
            </tr>
            {% for id, item in cart_items.items() %}
                <tr>
                    <td>{{ item.name }}</td>
                    <td>${{ item.price }}</td>
                    <td>{{ item.quantity }}</td>
                    <td>${{ "%.2f"|format(item.price * item.quantity) }}</td>
                    <td>
                        <form action="/remove_from_cart" method="post">
                            <input type="hidden" name="product_id" value="{{ id }}">
                            <button type="submit" class="btn btn-danger">Remove</button>
                        </form>
                    </td>
                </tr>
            {% endfor %}
        </table>
        <h3>Total: ${{ "%.2f"|format(total) }}</h3>
        <form action="/checkout" method="post">
            <button type="submit" class="btn checkout-btn">Proceed to Checkout</button>
        </form>
    {% else %}
        <p>Your cart is empty.</p>
    {% endif %}
{% endblock %}
"""

LOGIN_TEMPLATE = """
{% extends "base" %}
{% block content %}
    <h2>Login</h2>
    {% if error %}
        <p class="error">{{ error }}</p>
    {% endif %}
    <form action="/login" method="post" style="max-width: 400px;">
        <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px;">Username:</label>
            <input type="text" name="username" required style="width: 100%; padding: 8px;">
        </div>
        <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px;">Password:</label>
            <input type="password" name="password" required style="width: 100%; padding: 8px;">
        </div>
        <button type="submit" class="btn">Login</button>
        <p style="margin-top: 15px;">Don't have an account? <a href="/register">Register here</a></p>
    </form>
{% endblock %}
"""

REGISTER_TEMPLATE = """
{% extends "base" %}
{% block content %}
    <h2>Register</h2>
    {% if error %}
        <p class="error">{{ error }}</p>
    {% endif %}
    {% if success %}
        <p class="success">{{ success }}</p>
    {% endif %}
    <form action="/register" method="post" style="max-width: 400px;">
        <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px;">Username:</label>
            <input type="text" name="username" required style="width: 100%; padding: 8px;">
        </div>
        <div style="margin-bottom: 15px;">
            <label style="display: block; margin-bottom: 5px;">Password:</label>
            <input type="password" name="password" required style="width: 100%; padding: 8px;">
        </div>
        <button type="submit" class="btn">Register</button>
        <p style="margin-top: 15px;">Already have an account? <a href="/login">Login here</a></p>
    </form>
{% endblock %}
"""

# ======================
# Routes
# ======================
@app.route('/')
def home():
    return render_template_string(HOME_TEMPLATE, products=products)

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        if users.get(username) == password:
            session['logged_in'] = True
            session['username'] = username
            return redirect('/')
        return render_template_string(LOGIN_TEMPLATE, error="Invalid credentials")
    return render_template_string(LOGIN_TEMPLATE)

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form.get('username')
        password = request.form.get('password')
        if not username or not password:
            return render_template_string(REGISTER_TEMPLATE, error="Username and password required")
        if username in users:
            return render_template_string(REGISTER_TEMPLATE, error="Username already exists")
        users[username] = password
        return render_template_string(REGISTER_TEMPLATE, success="Registration successful! Please login")
    return render_template_string(REGISTER_TEMPLATE)

@app.route('/logout')
def logout():
    session.clear()
    return redirect('/')

@app.route('/add_to_cart', methods=['POST'])
def add_to_cart():
    if not session.get('logged_in'):
        return redirect('/login')

    try:
        product_id = int(request.form['product_id'])
        quantity = int(request.form['quantity'])
        if product_id not in products or quantity < 1 or quantity > products[product_id]['stock']:
            raise ValueError
    except (KeyError, ValueError):
        return "Invalid product or quantity", 400

    if 'cart' not in session:
        session['cart'] = {}

    cart = session['cart']
    if product_id in cart:
        new_quantity = cart[product_id]['quantity'] + quantity
        if new_quantity > products[product_id]['stock']:
            return "Not enough stock available", 400
        cart[product_id]['quantity'] = new_quantity
    else:
        cart[product_id] = {
            'name': products[product_id]['name'],
            'price': products[product_id]['price'],
            'quantity': quantity
        }

    session.modified = True
    return redirect('/')

@app.route('/remove_from_cart', methods=['POST'])
def remove_from_cart():
    try:
        product_id = int(request.form['product_id'])
    except (KeyError, ValueError):
        return "Invalid product", 400

    if 'cart' in session and product_id in session['cart']:
        del session['cart'][product_id]
        session.modified = True
    return redirect('/cart')

@app.route('/cart')
def view_cart():
    cart_items = session.get('cart', {})
    total = sum(Decimal(str(item['price'])) * item['quantity'] for item in cart_items.values())
    return render_template_string(CART_TEMPLATE, cart_items=cart_items, total=total)

@app.route('/checkout', methods=['POST'])
def checkout():
    if not session.get('logged_in'):
        return redirect('/login')

    if 'cart' not in session or not session['cart']:
        return redirect('/cart')

    # Update stock (in a real app, this would be a database transaction)
    for product_id, item in session['cart'].items():
        products[product_id]['stock'] -= item['quantity']

    session.pop('cart', None)
    return """
    <div style="text-align: center; padding: 50px;">
        <h1 style="color: #4CAF50;">Order Placed Successfully!</h1>
        <p>Thank you for your purchase.</p>
        <a href="/" class="btn">Back to Shop</a>
    </div>
    """

if __name__ == '__main__':
    app.run()